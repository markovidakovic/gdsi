basePath: /
definitions:
  auth.ChangeForgottenPasswordRequestModel:
    properties:
      code:
        type: string
      confirm_password:
        type: string
      email:
        type: string
      new_password:
        type: string
    type: object
  auth.ChangeForgottenPasswordResponseModel:
    properties:
      message:
        type: string
    type: object
  auth.ForgottenPasswordRequestModel:
    properties:
      email:
        type: string
    type: object
  auth.ForgottenPasswordResponseModel:
    properties:
      message:
        type: string
    type: object
  auth.LoginRequestModel:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.RefreshTokenRequestModel:
    properties:
      refresh_token:
        type: string
    type: object
  auth.SignupRequestModel:
    properties:
      dob:
        type: string
      email:
        type: string
      gender:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  auth.TokensResponseModel:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  courts.CourtModel:
    properties:
      created_at:
        type: string
      creator:
        $ref: '#/definitions/courts.CreatorModel'
      id:
        type: string
      name:
        type: string
    type: object
  courts.CreateCourtRequestModel:
    properties:
      name:
        type: string
    type: object
  courts.CreatorModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  courts.UpdateCourtRequestModel:
    properties:
      name:
        type: string
    type: object
  leagues.CreateLeagueRequestModel:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  leagues.CreatorModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  leagues.LeagueModel:
    properties:
      created_at:
        type: string
      creator:
        $ref: '#/definitions/leagues.CreatorModel'
      description:
        type: string
      id:
        type: string
      season:
        $ref: '#/definitions/leagues.SeasonModel'
      title:
        type: string
    type: object
  leagues.SeasonModel:
    properties:
      id:
        type: string
      title:
        type: string
    type: object
  leagues.UpdateLeagueRequestModel:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  matches.CourtModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  matches.CreateMatchRequestModel:
    properties:
      court_id:
        type: string
      player_two_id:
        type: string
      scheduled_at:
        type: string
      score:
        type: string
    type: object
  matches.LeagueModel:
    properties:
      id:
        type: string
      title:
        type: string
    type: object
  matches.MatchModel:
    properties:
      court:
        $ref: '#/definitions/matches.CourtModel'
      created_at:
        type: string
      id:
        type: string
      league:
        $ref: '#/definitions/matches.LeagueModel'
      player_one:
        $ref: '#/definitions/matches.PlayerModel'
      player_two:
        $ref: '#/definitions/matches.PlayerModel'
      scheduled_at:
        type: string
      score:
        type: string
      season:
        $ref: '#/definitions/matches.SeasonModel'
      winner:
        $ref: '#/definitions/matches.PlayerModel'
    type: object
  matches.PlayerModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  matches.SeasonModel:
    properties:
      id:
        type: string
      title:
        type: string
    type: object
  matches.SubmitMatchScoreRequestModel:
    properties:
      score:
        type: string
    type: object
  matches.UpdateMatchRequestModel:
    properties:
      court_id:
        type: string
      player_two_id:
        type: string
      scheduled_at:
        type: string
    type: object
  me.CurrentLeagueModel:
    properties:
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  me.MeModel:
    properties:
      created_at:
        type: string
      dob:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      player:
        $ref: '#/definitions/me.PlayerModel'
      role:
        type: string
    type: object
  me.PlayerModel:
    properties:
      activity_ratio:
        type: number
      created_at:
        type: string
      current_league:
        $ref: '#/definitions/me.CurrentLeagueModel'
      elo:
        type: integer
      handedness:
        type: string
      height:
        type: number
      id:
        type: string
      matches_expected:
        type: integer
      matches_played:
        type: integer
      matches_scheduled:
        type: integer
      matches_won:
        type: integer
      racket:
        type: string
      ranking:
        type: integer
      seasons_played:
        type: integer
      weight:
        type: number
      winning_ratio:
        type: number
    type: object
  me.UpdateMeRequestModel:
    properties:
      name:
        type: string
    type: object
  me.UpdatePasswordRequestModel:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      repeated_new_password:
        type: string
    type: object
  me.UpdatePasswordResponseModel:
    properties:
      message:
        type: string
    type: object
  players.AccountModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  players.CurrentLeagueModel:
    properties:
      id:
        type: string
      title:
        type: string
    type: object
  players.PlayerModel:
    properties:
      account:
        $ref: '#/definitions/players.AccountModel'
      activity_ratio:
        type: number
      created_at:
        type: string
      current_league:
        $ref: '#/definitions/players.CurrentLeagueModel'
      elo:
        type: integer
      handedness:
        type: string
      height:
        type: number
      id:
        type: string
      matches_expected:
        type: integer
      matches_played:
        type: integer
      matches_scheduled:
        type: integer
      matches_won:
        type: integer
      racket:
        type: string
      ranking:
        type: integer
      seasons_played:
        type: integer
      weight:
        type: number
      winning_ratio:
        type: number
    type: object
  players.UpdatePlayerRequestModel:
    properties:
      handedness:
        type: string
      height:
        type: number
      racket:
        type: string
      weight:
        type: number
    type: object
  response.Failure:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  response.InvalidField:
    properties:
      field:
        type: string
      location:
        description: location specifies where the field is comming from (path, query,
          body)
        type: string
      message:
        type: string
    type: object
  response.ValidationFailure:
    properties:
      invalid_fields:
        items:
          $ref: '#/definitions/response.InvalidField'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  seasons.CreateSeasonRequestModel:
    properties:
      description:
        type: string
      end_date:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  seasons.CreatorModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  seasons.SeasonModel:
    properties:
      created_at:
        type: string
      creator:
        $ref: '#/definitions/seasons.CreatorModel'
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  seasons.UpdateSeasonRequestModel:
    properties:
      description:
        type: string
      end_date:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  standings.LeagueModel:
    properties:
      id:
        type: string
      title:
        type: string
    type: object
  standings.PlayerModel:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  standings.SeasonModel:
    properties:
      id:
        type: string
      title:
        type: string
    type: object
  standings.StandingModel:
    properties:
      created_at:
        type: string
      games_lost:
        type: integer
      games_won:
        type: integer
      id:
        type: string
      league:
        $ref: '#/definitions/standings.LeagueModel'
      matches_played:
        type: integer
      matches_won:
        type: integer
      player:
        $ref: '#/definitions/standings.PlayerModel'
      points:
        type: integer
      season:
        $ref: '#/definitions/standings.SeasonModel'
      sets_lost:
        type: integer
      sets_won:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Documentation for the gdsi API
  title: Gdsi API
  version: 1.0.0
paths:
  /v1/auth/passwords/forgotten:
    post:
      consumes:
      - application/json
      description: Get an email with a password reset link
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.ForgottenPasswordRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.ForgottenPasswordResponseModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      summary: Forgotten password
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Reset forgotten password
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.ChangeForgottenPasswordRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.ChangeForgottenPasswordResponseModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      summary: Forgotten password
      tags:
      - auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Signup a new account
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.SignupRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokensResponseModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      summary: Signup
      tags:
      - auth
  /v1/auth/tokens/access:
    post:
      consumes:
      - application/json
      description: Login and get a new access token
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokensResponseModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      summary: Login
      tags:
      - auth
  /v1/auth/tokens/refresh:
    post:
      consumes:
      - application/json
      description: Get a refreshed access token
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshTokenRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokensResponseModel'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      summary: Refresh token
      tags:
      - auth
  /v1/courts:
    get:
      description: Get courts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/courts.CourtModel'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - courts
    post:
      consumes:
      - application/json
      description: Create a new court
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/courts.CreateCourtRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/courts.CourtModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Create
      tags:
      - courts
  /v1/courts/{courtId}:
    delete:
      description: Delete an existing court
      parameters:
      - description: Court id
        in: path
        name: courtId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Delete
      tags:
      - courts
    get:
      description: Get court by id
      parameters:
      - description: Court id
        in: path
        name: courtId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/courts.CourtModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get by id
      tags:
      - courts
    put:
      consumes:
      - application/json
      description: Update an existing court
      parameters:
      - description: Court id
        in: path
        name: courtId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/courts.UpdateCourtRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/courts.CourtModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Update
      tags:
      - courts
  /v1/me:
    delete:
      description: Delete my account and player profile data
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Delete
      tags:
      - me
    get:
      description: Get my account and player profile data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/me.MeModel'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - me
    put:
      consumes:
      - application/json
      description: Update my account and player profile data
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/me.UpdateMeRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/me.MeModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Update
      tags:
      - me
  /v1/me/password:
    put:
      consumes:
      - application/json
      description: Change password of the authenticated account
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/me.UpdatePasswordRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/me.UpdatePasswordResponseModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Update password
      tags:
      - me
  /v1/players:
    get:
      description: Get players
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/players.PlayerModel'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - players
  /v1/players/{playerId}:
    get:
      description: Get player by id
      parameters:
      - description: Player id
        in: path
        name: playerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/matches.MatchModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get by id
      tags:
      - players
    put:
      consumes:
      - application/json
      description: Update an existing player
      parameters:
      - description: Player id
        in: path
        name: playerId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/players.UpdatePlayerRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/players.PlayerModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Update
      tags:
      - players
  /v1/seasons:
    get:
      description: Get seasons
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/seasons.SeasonModel'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - seasons
    post:
      consumes:
      - application/json
      description: Create a new season
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/seasons.CreateSeasonRequestModel'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/seasons.SeasonModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Create
      tags:
      - seasons
  /v1/seasons/{seasonId}:
    delete:
      description: Delete an existing season
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Delete
      tags:
      - seasons
    get:
      description: Get season by id
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/seasons.SeasonModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get by id
      tags:
      - seasons
    put:
      consumes:
      - application/json
      description: Update an existing season
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/seasons.UpdateSeasonRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/seasons.SeasonModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Update
      tags:
      - seasons
  /v1/seasons/{seasonId}/leagues:
    get:
      description: Get leagues
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/leagues.LeagueModel'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - leagues
    post:
      consumes:
      - application/json
      description: Create a new league
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/leagues.CreateLeagueRequestModel'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/leagues.LeagueModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Create
      tags:
      - leagues
  /v1/seasons/{seasonId}/leagues/{leagueId}:
    delete:
      description: Delete an existing league
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Delete
      tags:
      - leagues
    get:
      description: Get league by id
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/leagues.LeagueModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get by id
      tags:
      - leagues
    put:
      consumes:
      - application/json
      description: Update an existing league
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/leagues.UpdateLeagueRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/leagues.LeagueModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Update
      tags:
      - leagues
  /v1/seasons/{seasonId}/leagues/{leagueId}/matches:
    get:
      description: Get matches
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/matches.MatchModel'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - matches
    post:
      consumes:
      - application/json
      description: Create a new match
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/matches.CreateMatchRequestModel'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/matches.MatchModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Create
      tags:
      - matches
  /v1/seasons/{seasonId}/leagues/{leagueId}/matches/{matchId}:
    get:
      description: Get match by id
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Match id
        in: path
        name: matchId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/matches.MatchModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get by id
      tags:
      - matches
    put:
      consumes:
      - application/json
      description: Update match
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Match id
        in: path
        name: matchId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/matches.UpdateMatchRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/matches.MatchModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Update
      tags:
      - matches
  /v1/seasons/{seasonId}/leagues/{leagueId}/matches/{matchId}/score:
    post:
      consumes:
      - application/json
      description: Submit a match score
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Match id
        in: path
        name: matchId
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/matches.SubmitMatchScoreRequestModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/matches.MatchModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Score
      tags:
      - matches
  /v1/seasons/{seasonId}/leagues/{leagueId}/players:
    get:
      description: Get league players
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/players.PlayerModel'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - players
  /v1/seasons/{seasonId}/leagues/{leagueId}/players/{playerId}:
    get:
      description: Get league player
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Player id
        in: path
        name: playerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/players.PlayerModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - players
  /v1/seasons/{seasonId}/leagues/{leagueId}/players/{playerId}/assign:
    delete:
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Player id
        in: path
        name: playerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/players.PlayerModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Remove
      tags:
      - players
    post:
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      - description: Player id
        in: path
        name: playerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/players.PlayerModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Assign
      tags:
      - players
  /v1/seasons/{seasonId}/leagues/{leagueId}/standings:
    get:
      description: Get standings
      parameters:
      - description: Season id
        in: path
        name: seasonId
        required: true
        type: string
      - description: League id
        in: path
        name: leagueId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/standings.StandingModel'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ValidationFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Failure'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Failure'
      security:
      - BearerAuth: []
      summary: Get
      tags:
      - standings
securityDefinitions:
  BearerAuth:
    description: 'Enter the Bearer token in the format: Bearer token'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
